{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/index.js","components/Title/index.js","components/Header/index.js","App.js","index.js"],"names":["FriendCard","props","console","log","react_default","a","createElement","className","alt","name","src","image","id","onClick","shuffleFriends","Wrapper","children","Title","Header","status","style","backgroundColor","App","state","friends","clickedFriendIDs","score","target","_this","includes","setState","alert","push","length","i","j","temp","Math","floor","random","Score","filter","friend","_this2","this","components_Wrapper","components_Header","textAlign","color","topScore","components_Title","map","FriendCard_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"okEAgCeA,MA5Bf,SAAoBC,GAElB,OADEC,QAAQC,IAAIF,GAGZG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAAMQ,KAAMC,IAAKT,EAAMU,MAAOC,GAAIX,EAAMW,GAAIC,QAAS,kBAAMZ,EAAMa,eAAeb,EAAMW,KAAKL,UAAU,qBCHxGQ,MAJf,SAAiBd,GACf,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWN,EAAMe,iBCG1BC,MAJf,SAAehB,GACb,OAAOG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASN,EAAMe,wBCGvBE,MAJf,SAAgBjB,GACd,OAAOG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASY,OAAQlB,EAAMkB,OAAQC,MAAO,CAACC,gBAAiB,cAAepB,EAAMe,WCoFtFM,6MA/EbC,MAAQ,CACNC,UACAC,iBAAkB,GAClBC,MAAO,EACPC,OAAQ,GACRR,OAAQ,MAIVL,eAAiB,SAAAF,GACf,IAAIa,EAAmBG,EAAKL,MAAME,iBAElC,GAAIA,EAAiBI,SAASjB,GAO5B,OANAgB,EAAKE,SAAS,CACZL,iBAAkB,GAClBC,MAAO,EACPP,OAAQ,oBAEVY,MAAM,uDAMR,GAHEN,EAAiBO,KAAKpB,GAGQ,KAA5Ba,EAAiBQ,OAOnB,OANAL,EAAKE,SAAS,CACZJ,MAAO,EACPP,OAAQ,WACRM,iBAAkB,UAEpBM,MAAM,+CAIRH,EAAKE,SAAS,CAAEN,UAASC,mBAAkBC,MAAOD,EAAiBQ,OAAQd,OAAQ,MAEnF,IAAIe,EAAI,EAAGC,EAAI,EAAGC,EAAO,KAEzB,IAAKF,EAAIV,EAAQS,OAAS,EAAGC,EAAI,EAAGA,GAAK,EACvCC,EAAIE,KAAKC,MAAMD,KAAKE,UAAYL,EAAI,IACpCE,EAAOZ,EAAQU,GACfV,EAAQU,GAAKV,EAAQW,GACrBX,EAAQW,GAAKC,KAMjBI,MAAQ,SAAA5B,GAEN,IAAMY,EAAUI,EAAKL,MAAMC,QAAQiB,OAAO,SAAAC,GAAM,OAAIA,EAAO9B,KAAOA,IAElEgB,EAAKE,SAAS,CAAEN,qFAIT,IAAAmB,EAAAC,KACP,OACExC,EAAAC,EAAAC,cAACuC,EAAD,KACEzC,EAAAC,EAAAC,cAACwC,EAAD,KACA1C,EAAAC,EAAAC,cAAA,KAAGc,MAAO,CAAC2B,UAAW,SAAUC,MAAO,YAAvC,8EACE5C,EAAAC,EAAAC,cAAA,MAAIc,MAAO,CAAC2B,UAAW,SAAUC,MAAO,YAAxC,UAA4DJ,KAAKrB,MAAMG,MAAvE,uBAAkGkB,KAAKrB,MAAM0B,WAG/G7C,EAAAC,EAAAC,cAAC4C,EAAD,+BACCN,KAAKrB,MAAMC,QAAQ2B,IAAI,SAAAT,GAAM,OAC5BtC,EAAAC,EAAAC,cAAC8C,EAAD,CACEtC,eAAgB6B,EAAK7B,eACrBF,GAAI8B,EAAO9B,GACXyC,IAAKX,EAAO9B,GAEZD,MAAO+B,EAAO/B,kBAzER2C,mBCFlBC,IAASC,OAAOpD,EAAAC,EAAAC,cAACmD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.cdc9ee65.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n// import App from \"./App\";\n\nfunction FriendCard(props) {\n    console.log(props)\n  return (\n\n    <div className=\"card\">\n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} id={props.id} onClick={() => props.shuffleFriends(props.id)} className='clicked'/>\n      </div>\n\n          {/* <li>\n            {/* <strong>Name</strong> {props.name} */}\n          \n          {/* <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li> */}\n        \n     \n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\"> */}\n        {/* ùòÖ */}\n      {/* </span> */}\n    </div>\n    \n  );\n}\n\nexport default FriendCard;\n\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return <h1 className=\"title\">{props.children}</h1>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Header(props) {\n  return <div className=\"header\" status={props.status} style={{backgroundColor: \"lightgray\"}}>{props.children}</div>;;\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport friends from \"./friends.json\";\nimport Header from \"./components/Header\"\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  state = {\n    friends,\n    clickedFriendIDs: [],\n    score: 0,\n    target: 12,\n    status: \"\"\n  };\n\n\n  shuffleFriends = id => {\n    let clickedFriendIDs = this.state.clickedFriendIDs;\n\n    if (clickedFriendIDs.includes(id)) {\n      this.setState({\n        clickedFriendIDs: [],\n        score: 0,\n        status: \"Try Again!\"\n      });\n      alert(\"Dwight would be disappointed. Give it another shot.\")\n      return;\n    } else {\n      clickedFriendIDs.push(id)\n    }\n\n    if (clickedFriendIDs.length === 12) {\n      this.setState({\n        score: 0,\n        status: \"You Won!\",\n        clickedFriendIDs: []\n      });\n      alert(\"You got the whole office. Wanna play again?\")\n      return;\n    }\n\n    this.setState({ friends, clickedFriendIDs, score: clickedFriendIDs.length, status: \" \" });\n\n    var i = 0, j = 0, temp = null\n\n    for (i = friends.length - 1; i > 0; i -= 1) {\n      j = Math.floor(Math.random() * (i + 1))\n      temp = friends[i]\n      friends[i] = friends[j]\n      friends[j] = temp\n    }\n\n  }\n\n\n  Score = id => {\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ friends });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Header>\n        <p style={{textAlign: \"center\", color: \"#0288D1\"}}>Don't click a photo more than once. Try and get all 12 Dunder Mifflinites!</p>\n          <h4 style={{textAlign: \"center\", color: \"#0288D1\"}}>Score: {this.state.score} | Score to Meet: 12{this.state.topScore}</h4>\n          {/* <h5 style={{textAlign: \"center\", color: \"white\"}}>{this.state.status}</h5> */}\n        </Header>\n        <Title>The Office Memory Game</Title>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            shuffleFriends={this.shuffleFriends}\n            id={friend.id}\n            key={friend.id}\n            // name={friend.name}\n            image={friend.image}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}